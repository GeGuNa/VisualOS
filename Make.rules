ifndef TARGET_DIR
	TARGET_DIR	:= $(BUILD_DIR)
endif

.PRECIOUS:	$(TARGET_DIR)/%.o $(TARGET_DIR)/%_c.o $(TARGET_DIR)/%_cpp.o $(TARGET_DIR)/%_asm.o

$(TARGET_DIR)/%.o $(TARGET_DIR)/%_c.o:		$(THIS)/%.c
											$(CC) $(CFLAGS) -c -MD $< -o $@

$(TARGET_DIR)/%.o $(TARGET_DIR)/%_cpp.o:	$(THIS)/%.cpp
											$(CXX) $(CXXFLAGS) -c -MD $< -o $@

$(TARGET_DIR)/%.o $(TARGET_DIR)/%_asm.o:	$(THIS)/%.asm
											$(AS) $(ASFLAGS) $< -o $@ -MD $(basename $@).d

.PRECIOUS:	$(TARGET_DIR)/%.d $(TARGET_DIR)/%_c.d $(TARGET_DIR)/%_cpp.d $(TARGET_DIR)/%_asm.d
include $(wildcard $(TARGET_DIR)/*.d)

#######################################
LDLIBS_FILTERED	= $(filter-out $^, $(LDLIBS))

$(TARGET_DIR)/%.elf:		$(TARGET_DIR)/%_partial.o
							$(LD) $(LDFLAGS) $^ $(LDLIBS_FILTERED) -o $@
#							$(OBJCOPY) $(OBJCOPYFLAGS) --strip-debug $@ $(addsuffix _release.elf, $(basename $@))

$(TARGET_DIR)/%_partial.o:	# No prerequisites
							$(LD) $(LDFLAGS) -r $(LDLIBS) -o $@

# May have to be $(CXX)
$(TARGET_DIR)/%.so:			$(TARGET_DIR)/%.o
							$(LD) $(LDFLAGS) $^ $(LDLIBS_FILTERED) -o $@

# May have to be $(CXX)
$(TARGET_DIR)/%.so:			# No prerequisites
							$(LD) $(LDFLAGS) $(LDLIBS) -o $@

$(TARGET_DIR)/%.a:			$(TARGET_DIR)/%.o
							$(AR) $(ARFLAGS) $@ $^ $(filter-out $^, $(ARLIBS))

$(TARGET_DIR)/%.a:			# No prerequisites
							$(AR) $(ARFLAGS) $@ $(ARLIBS)

$(TARGET_DIR)/%.efi:		$(TARGET_DIR)/%.so
							$(OBJCOPY) -j .text -j .sdata -j .data -j .dynamic -j .dynsym -j .rel -j .rela -j .reloc $(OBJCOPYFLAGS) $< $@

# Convert to assembly
$(ASMDUMP_DIR)/%.s:	$(THIS)/%.c
					$(CC) $(CFLAGS) -S -masm=intel -fverbose-asm $< -o $@

$(ASMDUMP_DIR)/%.s:	$(THIS)/%.cpp
					$(CXX) $(CXXFLAGS) -S -masm=intel -fverbose-asm $< -o $@
